{"version":3,"sources":["components/ListCountries/ListCountries.module.css","components/CountryDetails/CountryDetails.module.css","components/Navbar/Navbar.module.css","components/CountryDetails/Cards.module.css","components/api/index.js","redux/worldCountries/worldCountries.js","components/CountryDetails/Cards.js","components/CountryDetails/CountryDetails.js","components/ListCountries/ListCountries.js","components/images/logo.png","components/Navbar/Navbar.js","App.js","redux/configureStore.js","index.js"],"names":["module","exports","GET_ALLCOUNTRIES","fetchWorldCountriesData","a","axios","get","data","getCountryData","action","type","countries","initialState","fetchCountries","dispatch","allCountries","worldCountriesReducer","state","Cards","info","continent","cases","updated","deaths","todayCases","tests","todayDeaths","recovered","active","population","todayRecovered","className","styles","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","sml","start","end","duration","separator","variant","updte","Date","toDateString","CountryDetails","countryInfo","country","useParams","name","useDispatch","useSelector","useEffect","constructor","find","obj","image","src","flag","alt","loader","ListCountries","useState","search","setSearch","searchForm","placeholder","onChange","target","value","filter","toLowerCase","includes","map","i","link","to","firstDiv","Navbar","nav","logo","App","basename","exact","path","element","reducers","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.595ff120.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ListCountries_container__3Ziqd\",\"item\":\"ListCountries_item__1osQY\",\"firstDiv\":\"ListCountries_firstDiv__1TbzW\",\"image\":\"ListCountries_image__1_-WQ\",\"loader\":\"ListCountries_loader__fYdKv\",\"spin\":\"ListCountries_spin__2PCne\",\"searchForm\":\"ListCountries_searchForm__C8qhp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryDetails_container__2stKJ\",\"loader\":\"CountryDetails_loader__3WYIF\",\"spin\":\"CountryDetails_spin__2DhxO\",\"image\":\"CountryDetails_image__pnwhw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"logo\":\"Navbar_logo__1H3m4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1bRnl\",\"sml\":\"Cards_sml__32v0p\",\"card\":\"Cards_card__2sNOA\",\"updte\":\"Cards_updte__2_K3f\",\"infected\":\"Cards_infected__2_j6V\",\"recovered\":\"Cards_recovered__3_-6K\",\"deaths\":\"Cards_deaths__2cO26\"};","import axios from 'axios';\n\nexport const GET_ALLCOUNTRIES = 'worldCountries';\nconst API = 'https://disease.sh/v3/covid-19/countries';\n\nconst fetchWorldCountriesData = async () => {\n  try {\n    const { data } = await axios.get(API);\n    return data;\n  } catch (error) { return error; }\n};\n\nconst getCountryData = async (action) => {\n  let countries;\n\n  switch (action.type) {\n    case GET_ALLCOUNTRIES:\n      countries = await fetchWorldCountriesData();\n      return countries;\n    default:\n      return 'Unrecognized action';\n  }\n};\n\nexport default getCountryData;\n","import getCountryData, { GET_ALLCOUNTRIES } from '../../components/api';\n\nconst initialState = {\n  countries: [],\n};\n\nfunction worldCountries(payload) {\n  return { type: GET_ALLCOUNTRIES, allCountries: payload };\n}\n\nconst worldCountriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALLCOUNTRIES:\n      return { ...state, allCountries: action.allCountries };\n    default:\n      return state;\n  }\n};\n\nexport const fetchCountries = () => async (dispatch) => {\n  const action = { type: GET_ALLCOUNTRIES };\n  const allCountries = await getCountryData(action);\n  dispatch(worldCountries(allCountries));\n};\n\nexport default worldCountriesReducer;\n","/* eslint-disable comma-dangle */\nimport {\n  Card, CardContent, Grid, Typography\n} from '@material-ui/core';\nimport cx from 'classnames';\nimport React from 'react';\nimport CountUp from 'react-countup';\nimport styles from './Cards.module.css';\n\nconst Cards = ({\n  info: {\n    continent, cases, updated, deaths, todayCases, tests, todayDeaths,\n    recovered, active, population, todayRecovered,\n  },\n}) => (\n  <div className={styles.container}>\n    <Grid container spacing={3} justifyContent=\"center\">\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            <small className={styles.sml}>Total number of cases</small>\n            <br />\n          </Typography>\n          <CountUp start={0} end={cases} duration={2.0} separator=\",\" />\n          <br />\n          <br />\n          <Typography variant=\"body2\">\n            <small className={styles.sml}>Today&lsquo;s cases</small>\n            <br />\n            <CountUp start={0} end={todayCases} duration={2.0} separator=\",\" />\n          </Typography>\n          <Typography variant=\"body1\">\n            <small className={styles.sml}>Total population</small>\n            <br />\n            <CountUp start={0} end={population} duration={2.0} separator=\",\" />\n          </Typography>\n          <br />\n          <Typography color=\"textSecondary\">\n            <small className={styles.sml}>continent</small>\n          </Typography>\n          <span>{continent}</span>\n        </CardContent>\n      </Grid>\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            <small className={styles.sml}>Total number of recovered</small>\n            <br />\n          </Typography>\n          <CountUp start={0} end={recovered} duration={2.0} separator=\",\" />\n          <br />\n          <br />\n          <Typography variant=\"body2\">\n            <small className={styles.sml}>Active cases</small>\n            <br />\n            <CountUp start={0} end={active} duration={2.0} separator=\",\" />\n          </Typography>\n          <Typography variant=\"body1\">\n            <small className={styles.sml}> Total number of tested </small>\n            <br />\n            <CountUp start={0} end={tests} duration={2.0} separator=\",\" />\n          </Typography>\n          <br />\n          <Typography color=\"textSecondary\">\n            <small className={styles.sml}>Recovered today</small>\n          </Typography>\n          <span>{todayRecovered}</span>\n        </CardContent>\n      </Grid>\n      <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n        <CardContent>\n          <Typography color=\"textSecondary\" gutterBottom>\n            <small className={styles.sml}>Total number of deaths</small>\n            <br />\n          </Typography>\n          <CountUp start={0} end={deaths} duration={2.0} separator=\",\" />\n          <br />\n          <br />\n          <Typography variant=\"body2\">\n            <small className={styles.sml}>Today&lsquo;s deaths</small>\n            <br />\n            <CountUp start={0} end={todayDeaths} duration={2.0} separator=\",\" />\n          </Typography>\n          <br />\n          <Typography color=\"textSecondary\">\n            <small className={styles.sml}>Updated</small>\n          </Typography>\n          <span className={styles.updte}>\n            <Typography color=\"textSecondary\">{new Date(updated).toDateString()}</Typography>\n          </span>\n        </CardContent>\n      </Grid>\n    </Grid>\n  </div>\n);\nexport default Cards;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchCountries } from '../../redux/worldCountries/worldCountries';\nimport Cards from './Cards';\nimport styles from './CountryDetails.module.css';\n\nconst CountryDetails = () => {\n  const { name: country } = useParams();\n  let countryInfo;\n  const dispatch = useDispatch();\n  countryInfo = useSelector((state) => state.worldCountriesReducer.allCountries);\n  useEffect(() => {\n    if (!countryInfo) {\n      dispatch(fetchCountries());\n    }\n  }, []);\n\n  if (!countryInfo) return <div className={styles.loader} />;\n  if (countryInfo.constructor.name === 'Array') {\n    countryInfo = countryInfo.find((obj) => obj.country === country);\n  }\n  return (\n    <div className={styles.container}>\n      <h1>{country}</h1>\n      <div>\n        <img className={styles.image} src={countryInfo.countryInfo.flag} alt=\"Flag\" />\n      </div>\n      <Cards info={countryInfo} />\n    </div>\n  );\n};\n\nexport default CountryDetails;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport CountUp from 'react-countup';\nimport { NavLink } from 'react-router-dom';\nimport { fetchCountries } from '../../redux/worldCountries/worldCountries';\nimport styles from './ListCountries.module.css';\n\nconst ListCountries = () => {\n  const dispatch = useDispatch();\n  const allCountries = useSelector((state) => state.worldCountriesReducer.allCountries);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    if (!allCountries) {\n      dispatch(fetchCountries());\n    }\n  }, [dispatch]);\n\n  if (!allCountries) return <div className={styles.loader} />;\n  return (\n\n    <div>\n      <div>\n        <form className={styles.searchForm}>\n          <input\n            className=\"form-control me-2\"\n            type=\"search\"\n            placeholder=\"Country name\"\n            aria-label=\"Search\"\n            onChange={({ target }) => {\n              setSearch(target.value);\n            }}\n          />\n        </form>\n      </div>\n      <div className={styles.container}>\n        {\n        allCountries\n          .filter((item) => item.country.toLowerCase().includes(search.toLowerCase()))\n          .map((country, i) => (\n            <NavLink\n              className={styles.link}\n              to={`countries/${country.country}`}\n              key={i}\n            >\n              <div className={styles.item}>\n                <div className={styles.firstDiv}>\n                  <h2 className={styles.name}>{country.country}</h2>\n                  <img className={styles.image} src={country.countryInfo.flag} alt=\"Flag\" />\n                </div>\n                <div>\n                  <h3>Total Covid cases:</h3>\n                  <span className={styles.infected}>\n                    <CountUp start={0} end={country.cases} duration={2.0} separator=\",\" />\n                  </span>\n                </div>\n                <div>\n                  <h3>Recovered:</h3>\n                  <span className={styles.recovered}>\n                    <CountUp start={0} end={country.recovered} duration={2.0} separator=\",\" />\n                  </span>\n                </div>\n              </div>\n            </NavLink>\n          ))\n      }\n        ;\n      </div>\n    </div>\n  );\n};\n\nexport default ListCountries;\n","export default __webpack_public_path__ + \"static/media/logo.9e5d4fc7.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../images/logo.png';\nimport styles from './Navbar.module.css';\n\nconst Navbar = () => (\n  <nav className={styles.nav}>\n    <div>\n      <NavLink to=\"/\"><img className={styles.logo} src={logo} alt=\"logo\" /></NavLink>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import { HashRouter, Route, Routes } from 'react-router-dom';\n\nimport React from 'react';\nimport { CountryDetails, ListCountries, Navbar } from './components';\nimport styles from './App.module.css';\n\nconst App = () => (\n  <HashRouter basename=\"/\">\n    <div className={styles.container}>\n      <Navbar />\n      <Routes>\n        <Route exact path=\"/\" element={<ListCountries />} />\n        <Route path=\"/countries/:name\" element={<CountryDetails />} />\n      </Routes>\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport worldCountriesReducer from './worldCountries/worldCountries';\n\nconst reducers = combineReducers({ worldCountriesReducer });\n\nconst store = createStore(\n  reducers,\n  applyMiddleware(thunk, logger),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}